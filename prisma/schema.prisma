// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatusCommande {
  EN_ATTENTE
  CONFIRMEE
  EN_PREPARATION
  PRETE
  LIVREE
  ANNULEE
}

enum CategorieMenu {
  ENTREE
  PLAT_PRINCIPAL
  DESSERT
  BOISSON
}

model Menu {
  id          String        @id @default(cuid())
  nom         String
  description String?
  prix        Float
  categorie   CategorieMenu
  disponible  Boolean       @default(true)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")

  // Relations
  commandeItems CommandeItem[]

  @@map("menus")
}

model Commande {
  id            String         @id @default(cuid())
  numeroCommande String        @unique @map("numero_commande")
  clientId      String         @map("client_id") // Référence au service client
  status        StatusCommande @default(EN_ATTENTE)
  total         Float
  adresse       String?
  telephone     String?
  commentaires  String?
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")

  // Relations
  items         CommandeItem[]

  @@map("commandes")
}

model CommandeItem {
  id         String   @id @default(cuid())
  commandeId String   @map("commande_id")
  menuId     String   @map("menu_id")
  quantite   Int      @default(1)
  prix       Float
  createdAt  DateTime @default(now()) @map("created_at")

  // Relations
  commande   Commande @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  menu       Menu     @relation(fields: [menuId], references: [id], onDelete: Restrict)

  @@map("commande_items")
}
